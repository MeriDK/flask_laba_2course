{
  "openapi": "3.0.0",
  "info": {
    "description": "server",
    "version": "1.0.0",
    "title": "Swagger :)",
    "contact": {
      "email": "poshta@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "Event Request",
      "description": "API for event requests"
    },
    {
      "name": "Users Request",
      "description": "API for users requests"
    }
  ],
  "paths": {
    "/events/": {
      "get": {
        "summary": "Get all events",
        "tags": [
          "Event Request"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/events/{user_id}": {
      "post": {
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "byte"
            }
          }
        ],
        "security": {
          "bearerAuth": []
        },
        "summary": "Create new event",
        "tags": [
          "Event Request"
        ],
        "requestBody": {
          "description": "Event Request Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Event id not found"
          },
          "401": {
            "description": "Access token problem"
          }
        }
      }
    },
    "/events/{event_id}": {
      "parameters": [
        {
          "name": "event_id",
          "in": "path",
          "required": true,
          "description": "Event ID",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Event Request"
        ],

        "summary": "Get event by id",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                  "$ref": "#/components/schemas/event"
              }
            }
          },
          "404": {
            "description": "Event id not found"
          }
        }
      },
      "put": {
        "summary": "Update event",
        "tags": [
          "Event Request"
        ],
        "requestBody": {
          "description": "Event Request Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Event id not found"
          }
        }
      }
    },
    "/events/{event_id}/{user_id}": {
      "parameters": [
        {
          "name": "event_id",
          "in": "path",
          "required": true,
          "description": "Event ID",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "description": "User ID",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Add new user to event",
        "tags": [
          "Event Request"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Event or user id not found"
          }
        }
      }
    },
    "/users/{user_id}": {
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "description": "User ID",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get all user events",
        "tags": [
          "Users Request"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/event"
              }
            }
          },
          "404": {
            "description": "User id not found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": [
          "Users Request"
        ],
        "summary": "Create new user id",

        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/user"
            }
          },
          "500": {
            "description": "Unexpected error. (Кода нет но вы держитесь)"
          }
        }
      },
      "get": {
        "tags": [
          "Users Request"
        ],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "id": {
        "properties": {
          "uuid": {
            "type": "string"
          }
        }
      },
      "event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tasks": {
            "type": "string"
          }
        }
      }
    }
  }
}
